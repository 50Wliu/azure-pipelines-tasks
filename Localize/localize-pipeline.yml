name: $(Date:MMddyy)$(Rev:.rrrr)

trigger: none

schedules:
- cron: 0 8 * * Mon # mm HH DD MM DW
  displayName: Localization update
  branches:
    include: 
    - Localization
  always: true

stages:
- stage: __default
  jobs:
  - job: Job1
    pool:
      vmImage: windows-latest
    steps:
    - powershell: |
        $week = (Invoke-WebRequest https://whatsprintis.it -Headers @{"Accept"= "application/json"} | ConvertFrom-Json).week
        $sprint = (Invoke-WebRequest https://whatsprintis.it -Headers @{"Accept"= "application/json"} | ConvertFrom-Json).sprint
        Write-Host "##vso[task.setvariable variable=week]$week"
        Write-Host "##vso[task.setvariable variable=sprint]$sprint"
      displayName: "Determine the number of the week in the sprint and sprint number"

    - powershell: |
        git config --global user.email "$(username)@microsoft.com"
        git config --global user.name "$(username)"
        git checkout -b Localization origin/Localization
        git merge origin/master
        git push origin Localization
      displayName: "Sync with master branch"
      condition: and(succeeded(), or(and(eq(variables['WEEK'], '3'), eq(variables['build.reason'], 'Schedule')), eq(variables['build.reason'], 'Manual')))

    - task: OneLocBuild@2
      condition: and(succeeded(), or(and(eq(variables['WEEK'], '3'), eq(variables['build.reason'], 'Schedule')), eq(variables['build.reason'], 'Manual')))
      inputs:
        locProj: 'Localize/LocProject.json'
        outDir: '$(Build.ArtifactStagingDirectory)'
        packageSourceAuth: 'patAuth'
        patVariable: '$(OneLocBuildPAT)'
        isCreatePrSelected: true
        repoType: 'gitHub'
        prSourceBranchPrefix: 'Localize'
        gitHubPatVariable: '$(GitHubPAT)'
        isAutoCompletePrSelected: true
      env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)

    - powershell: |
        node Localize/bump-version.js
      displayName: Bump tasks' and packages' Localize/bump-version.js
      condition: and(succeeded(), or(and(eq(variables['WEEK'], '3'), eq(variables['build.reason'], 'Schedule')), eq(variables['build.reason'], 'Manual')))

    - powershell: |
        git add -a
        git commit -m 'Bumped versions'
        git push
      displayName: commit and push versions bump
      condition: and(succeeded(), or(and(eq(variables['WEEK'], '3'), eq(variables['build.reason'], 'Schedule')), eq(variables['build.reason'], 'Manual')))
    
    - task: PowerShell@2
      inputs:
        filePath: 'Localize/open-pr.ps1'
        failOnStderr: true
      env:
        GH_TOKEN: '$(GitHubPAT)'
      displayName: Open a PR
      condition: and(succeeded(), or(and(eq(variables['WEEK'], '3'), eq(variables['build.reason'], 'Schedule')), eq(variables['build.reason'], 'Manual')))

    - powershell: |
        $body = '{"text": "Created tasks localization update PR. Someone please approve/merge it. :please-puss-in-boots:' + $env:PR_LINK + ' "}'
        Invoke-RestMethod -Uri $(slackUri) -Method Post -Body $body -ContentType 'application/json'
      displayName: 'Send Slack notification about PR opened'
      condition: and(failed(), eq(variables['WEEK'], '3'), eq(variables['build.reason'], 'Schedule'))

    - powershell: |
        $buildUrl = "$(System.TeamFoundationCollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)&_a=summary"
        $body = '{"text": "Something went wrong while creating tasks localization update PR. Build: ' + $buildUrl + '"}'
        Invoke-RestMethod -Uri $(slackUri) -Method Post -Body $body -ContentType 'application/json'
      displayName: 'Send Slack notification about error'
      condition: and(failed(), eq(variables['WEEK'], '3'), eq(variables['build.reason'], 'Schedule'))

